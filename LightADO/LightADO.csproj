<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <Version>5.4.0</Version>
    <Authors>ALGHABBAN</Authors>
    <Company>Quad Microsystem</Company>
    <Description>Let's face it Open, close, execute and handle errors for ADO is drag. That's why we wrote **LightAdo dotNet**

Employ employ = new Query().ExecuteToObject(
                "Employes_GetByID",
                System.Data.CommandType.StoredProcedure,
                new Parameter("ID", id));

LightAdo provides a straight-forward, ORM solution to handle ADO for your application data. 
It includes built-in casting, validation,  encryption, bulks , logs and more out of the box.</Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>[very important]
**** Don't upgrad unless you can offer modifying your code  to support dotnet 3.0 ***** 
====================

Map Object vice versa between CLI and SQL Server.
Validate the object before push it to SQL Server.
Custome Validation ber property.
Setting default values for each property.
Relationship mapping between objects using Primary and forign kyes.
SQL Server Transcation supported.
Change type of property on runtime before send it to SQL Server.
Use C# naming conventions to replace the naming conventions for SQL server.
Convert object vice verrsa between Json and XML and CLI.
Go old schoole and get straight-forward Data set or datatable.
Send Bulks of objects for insert, update and delete with support for workflow and Relationship.
Plug your logic to lightado events gives you the power to control and see the transactions all the way from mapping, validations execution, closing tell the object get back to you.
Enable logging using the power of log4net.
Encrypt each property and decrypt on run time, using your encryption methods.
Multi Mapping convert result to multiple types of objects.

</PackageReleaseNotes>
    <PackageId>LightAdo.net</PackageId>
    <Product>LightAdo.net</Product>
    <AssemblyVersion>5.4.0.0</AssemblyVersion>
    <FileVersion>5.4.0.0</FileVersion>
    <RepositoryUrl>https://github.com/aalghabban/lightado</RepositoryUrl>
    <PackageProjectUrl>https://lighado.quadmicrosystem.com</PackageProjectUrl>
    <PackageIconUrl>https://i.ibb.co/9gdzCHg/lightweight-icon-250x250.png</PackageIconUrl>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="log4net" Version="2.0.8" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Abstractions" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.FileExtensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Abstractions" Version="3.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.2" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.6.0" />
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
    <PackageReference Include="System.Data.SqlClient" Version="4.7.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Parameter.cs">
      <ExcludeFromSourceAnalysis>False</ExcludeFromSourceAnalysis>
      <ExcludeFromStyleCop>False</ExcludeFromStyleCop>
    </Compile>
    <Compile Update="SqlConnectionHandler.cs">
      <ExcludeFromSourceAnalysis>False</ExcludeFromSourceAnalysis>
      <ExcludeFromStyleCop>False</ExcludeFromStyleCop>
    </Compile>
  </ItemGroup>

</Project>
